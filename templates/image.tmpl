// Code generated by github.com/cshum/vipsgen. DO NOT EDIT.

package vips

// #include "vips.h"
import "C"
import (
	"sync"
)

// Image contains a libvips image and manages its lifecycle.
type Image struct {
	image  *C.VipsImage
	format ImageType
	lock   sync.Mutex
}

// setImage resets the image for this image and frees the previous one
func (r *Image) setImage(image *C.VipsImage) {
	r.lock.Lock()
	defer r.lock.Unlock()

	if r.image == image {
		return
	}

	if r.image != nil {
		clearImage(r.image)
	}

	r.image = image
}

// Format returns the initial format of the vips image when loaded.
func (r *Image) Format() ImageType {
	return r.format
}

// Width returns the width of this image.
func (r *Image) Width() int {
	return int(r.image.Xsize)
}

// Height returns the height of this image.
func (r *Image) Height() int {
	return int(r.image.Ysize)
}

// Bands returns the number of bands for this image.
func (r *Image) Bands() int {
	return int(r.image.Bands)
}

// Close closes the image and frees the memory
func (r *Image) Close() {
	r.lock.Lock()
	if r.image != nil {
		clearImage(r.image)
		r.image = nil
	}
	r.lock.Unlock()
}

// clearImage frees the VipsImage
func clearImage(img *C.VipsImage) {
	C.g_object_unref(C.gpointer(img))
}
